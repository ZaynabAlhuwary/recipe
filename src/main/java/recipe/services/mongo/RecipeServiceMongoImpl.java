package recipe.services.mongo;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Profile;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.stereotype.Service;import recipe.commands.mongo.M_RecipeCmd;import recipe.converters.mongo.M_RecipeCmdToRecipe;import recipe.converters.mongo.M_RecipeToRecipeCmd;import recipe.domain.mongo.M_Recipe;import recipe.repositories.mongo.CategoryMongoRepo;import recipe.repositories.mongo.RecipeMongoRepo;@Slf4j@Service@Profile("mongoDb")public class RecipeServiceMongoImpl implements RecipeMongoService {    private RecipeMongoRepo recipeMongoRepo;    private CategoryMongoRepo categoryMongoRepo;    private M_RecipeCmdToRecipe toRecipe;    private M_RecipeToRecipeCmd toRecipeCmd;    @Autowired    public RecipeServiceMongoImpl(RecipeMongoRepo recipeMongoRepo, CategoryMongoRepo categoryMongoRepo, M_RecipeCmdToRecipe toRecipe, M_RecipeToRecipeCmd toRecipeCmd) {        this.recipeMongoRepo = recipeMongoRepo;        this.categoryMongoRepo = categoryMongoRepo;        this.toRecipe = toRecipe;        this.toRecipeCmd = toRecipeCmd;    }    @Override    public void saveRecipe(M_Recipe MRecipe) {        this.recipeMongoRepo.save(MRecipe);    }    @Override    public Page<M_Recipe> getRecipes(Pageable pageable) {        return this.recipeMongoRepo.findAll(pageable);    }    @Override    public M_Recipe findRecipeById(String id) {        return this.recipeMongoRepo.findById(id).orElseThrow(null);    }    @Override    public M_RecipeCmd saveRecipeCommand(M_RecipeCmd recipeCmd) {        M_Recipe recipeCmd1 = this.toRecipe.convert(recipeCmd);        M_RecipeCmd cmd = this.toRecipeCmd.convert(this.recipeMongoRepo.save(recipeCmd1));        return cmd;    }    @Override    public M_RecipeCmd findCommandById(String id) {        return this.toRecipeCmd.convert((this.recipeMongoRepo.findById(id)).get());    }    @Override    public void deleteById(String recipeId) {        this.recipeMongoRepo.deleteById(recipeId);    }}