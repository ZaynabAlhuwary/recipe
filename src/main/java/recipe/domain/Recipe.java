/* *  Created By  Zaynab Osama ,  On 2/23/19 2:43 PM * */package recipe.domain;import lombok.Data;import lombok.EqualsAndHashCode;import javax.persistence.*;import java.util.HashSet;import java.util.Set;@Data@Entity@EqualsAndHashCode(of = {"id"})public class Recipe extends Base {    private String description;    private Integer cookTime;    private Integer prepTime;    private String url;    private String directions;    private boolean flag;    @OneToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL, mappedBy = "recipe")    private Set<Ingredient> ingredients = new HashSet<Ingredient>();    @OneToOne(cascade = CascadeType.ALL)    private Note note;    @Enumerated(EnumType.STRING)    private Difficulty difficulty;    @ManyToOne(cascade = CascadeType.ALL)    @JoinColumn(name = "category_id")    private Category category;    public void setNote(Note note) {        if (note != null) {            this.note = note;        }    }    public void addIngredient(Ingredient ingredient) {        this.ingredients.add(ingredient);    }    public void setFlag(boolean flag) {        this.flag = true;    }}